#!/bin/bash

echo "üîí B·∫Øt ƒë·∫ßu thi·∫øt l·∫≠p b·∫£o m·∫≠t MySQL..."

# X√≥a ConfigMap c≈© n·∫øu t·ªìn t·∫°i
kubectl delete configmap mysql-security-config -n default --ignore-not-found

# T·∫°o ConfigMap cho c·∫•u h√¨nh b·∫£o m·∫≠t MySQL
cat << EOF | kubectl apply -f -
apiVersion: v1
kind: ConfigMap
metadata:
  name: mysql-security-config
  namespace: default
data:
  my.cnf: |
    [mysqld]
    ssl-ca=/etc/mysql/certs/ca.crt
    ssl-cert=/etc/mysql/certs/tls.crt
    ssl-key=/etc/mysql/certs/tls.key
    max_connections=100
    slow_query_log=1
    slow_query_log_file=/var/log/mysql/slow.log
    long_query_time=1
EOF

if [ $? -eq 0 ]; then
  echo "‚úÖ T·∫°o ConfigMap mysql-security-config th√†nh c√¥ng!"
else
  echo "‚ùå L·ªói khi t·∫°o ConfigMap!"
  exit 1
fi

# Ki·ªÉm tra xem Deployment mysql t·ªìn t·∫°i
if kubectl get deployment mysql -n default &> /dev/null; then
  # Kh·ªüi ƒë·ªông l·∫°i MySQL Deployment v·ªõi timestamp Unix
  TIMESTAMP=$(date +%s)
  kubectl patch deployment mysql -n default -p "{\"spec\":{\"template\":{\"metadata\":{\"annotations\":{\"restartTimestamp\":\"$TIMESTAMP\"}}}}}"
  if [ $? -eq 0 ]; then
    echo "‚úÖ Kh·ªüi ƒë·ªông l·∫°i Deployment mysql th√†nh c√¥ng!"
  else
    echo "‚ùå L·ªói khi kh·ªüi ƒë·ªông l·∫°i Deployment mysql!"
    exit 1
  fi
else
  echo "‚ùå Deployment mysql kh√¥ng t·ªìn t·∫°i!"
  exit 1
fi

echo "‚úÖ Ho√†n t·∫•t thi·∫øt l·∫≠p b·∫£o m·∫≠t MySQL!"