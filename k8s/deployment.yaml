apiVersion: v1
kind: ConfigMap
metadata:
  name: php-config
data:
  php-config.ini: |
    default_charset = "UTF-8"
    memory_limit = 128M
    max_execution_time = 30
    display_errors = On
    log_errors = On
    error_log = /var/log/php-errors.log
    upload_max_filesize = 20M
    post_max_size = 20M
  apache-config.conf: |
    <VirtualHost *:80>
      ServerAdmin webmaster@localhost
      DocumentRoot /var/www/html
      
      <Directory /var/www/html>
        Options Indexes FollowSymLinks
        AllowOverride All
        Require all granted
      </Directory>
      
      ErrorLog /var/log/apache2/error.log
      CustomLog /var/log/apache2/access.log combined
    </VirtualHost>

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: php-app
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: php-app
  template:
    metadata:
      labels:
        app: php-app
    spec:
      volumes:
        - name: php-code
          persistentVolumeClaim:
            claimName: php-pvc
        - name: source
          hostPath:
            path: /home/thinboonny/doannhanh/phpCode
            type: Directory
        - name: apache-config
          configMap:
            name: apache-config
            items:
            - key: 000-default.conf
              path: 000-default.conf
        - name: backup-volume
          persistentVolumeClaim:
            claimName: backup-pvc
        - name: php-config-volume
          configMap:
            name: php-config
      containers:
        - name: php-app
          image: php:7.4-apache
          ports:
            - containerPort: 80
          volumeMounts:
            - name: php-code
              mountPath: /var/www/html
            - name: php-config-volume
              mountPath: /usr/local/etc/php/conf.d/custom.ini
              subPath: php-config.ini
            - name: php-config-volume
              mountPath: /etc/apache2/sites-available/000-default.conf
              subPath: apache-config.conf
            - name: backup-volume
              mountPath: /var/www/html/backup
          lifecycle:
            postStart:
              exec:
                command: ["/bin/bash", "-c", "a2enmod rewrite && a2enmod headers && service apache2 reload"]
          env:
            - name: MYSQL_HOST
              value: mysql-service
            - name: MYSQL_USER
              value: app_user
            - name: MYSQL_PASSWORD
              value: userpassword
            - name: MYSQL_DB
              value: qlbandoannhanh
            - name: LANG
              value: C.UTF-8
            - name: LC_ALL
              value: C.UTF-8
          resources:
            limits:
              memory: "512Mi"
              cpu: "500m"
          livenessProbe:
            httpGet:
              path: /index.php
              port: 80
              scheme: HTTP
            initialDelaySeconds: 90
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /index.php
              port: 80
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 5
            timeoutSeconds: 5
            failureThreshold: 3
      initContainers:
      - name: init-php-code
        image: busybox:1.35
        command:
        - /bin/sh
        - -c
        args:
        - |
          echo "Starting initialization...";
          mkdir -p /var/www/html;
          mkdir -p /var/www/html/admin/config;
          mkdir -p /var/www/html/pages;
          mkdir -p /var/www/html/assets;
          mkdir -p /var/www/html/database;
          mkdir -p /var/www/html/sessions;
          mkdir -p /var/www/html/uploads;
          mkdir -p /var/www/html/backup;
          
          echo "Waiting for MySQL to be ready...";
          while ! nc -z mysql-service 3306; do
            echo "MySQL is not ready yet. Waiting...";
            sleep 5;
          done;
          
          echo "Copying files...";
          cp -r /source/* /var/www/html/ 2>/dev/null || true;
          
          echo "Setting permissions...";
          chown -R 33:33 /var/www/html;
          chmod -R 755 /var/www/html;
          
          echo "Initialization completed.";
        volumeMounts:
        - name: php-code
          mountPath: /var/www/html
        - name: source
          mountPath: /source
        - name: backup-volume
          mountPath: /var/www/html/backup
---
apiVersion: v1
kind: Service
metadata:
  name: php-service
spec:
  selector:
    app: php-app
  ports:
    - port: 80
      targetPort: 80
  type: LoadBalancer
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: php-ingress
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  rules:
  - host: php-app.local
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: php-service
            port:
              number: 80
---
apiVersion: v1
kind: Secret
metadata:
  name: mysql-secret
type: Opaque
stringData:
  root-password: rootpassword
  user-password: userpassword
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: mysql-init-script
data:
  init.sql: |
    CREATE DATABASE IF NOT EXISTS qlbandoannhanh CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci;
    USE qlbandoannhanh;
    
    CREATE TABLE IF NOT EXISTS users (
      id INT AUTO_INCREMENT PRIMARY KEY,
      username VARCHAR(50) NOT NULL,
      password VARCHAR(100) NOT NULL,
      email VARCHAR(100),
      name VARCHAR(100) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci,
      created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
    ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
    
    CREATE TABLE IF NOT EXISTS categories (
      id INT AUTO_INCREMENT PRIMARY KEY,
      name VARCHAR(100) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NOT NULL,
      description TEXT CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci,
      image VARCHAR(255),
      created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
    ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
    
    CREATE TABLE IF NOT EXISTS products (
      id INT AUTO_INCREMENT PRIMARY KEY,
      name VARCHAR(100) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NOT NULL,
      description TEXT CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci,
      price DECIMAL(10,2) NOT NULL,
      image VARCHAR(255),
      category_id INT,
      created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
      FOREIGN KEY (category_id) REFERENCES categories(id)
    ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
    
    -- Thêm dữ liệu mẫu với tiếng Việt
    INSERT IGNORE INTO categories (id, name, description) VALUES 
    (1, 'Đồ ăn nhanh', 'Các món ăn nhanh phổ biến'),
    (2, 'Đồ uống', 'Nước giải khát các loại'),
    (3, 'Món tráng miệng', 'Các loại bánh ngọt và tráng miệng');
    
    -- Thêm quyền cho người dùng ứng dụng
    CREATE USER IF NOT EXISTS 'app_user'@'%' IDENTIFIED BY 'userpassword';
    GRANT ALL PRIVILEGES ON qlbandoannhanh.* TO 'app_user'@'%';
    FLUSH PRIVILEGES;
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mysql
  template:
    metadata:
      labels:
        app: mysql
    spec:
      volumes:
        - name: mysql-persistent-storage
          emptyDir: {}
        - name: mysql-init-script-volume
          configMap:
            name: mysql-init-script
      containers:
        - name: mysql
          image: mysql:8.0
          ports:
            - containerPort: 3306
          env:
            - name: MYSQL_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mysql-secret
                  key: root-password
            - name: MYSQL_USER
              value: app_user
            - name: MYSQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mysql-secret
                  key: user-password
            - name: MYSQL_DATABASE
              value: qlbandoannhanh
          volumeMounts:
            - name: mysql-persistent-storage
              mountPath: /var/lib/mysql
            - name: mysql-init-script-volume
              mountPath: /docker-entrypoint-initdb.d
          args:
            - --character-set-server=utf8mb4
            - --collation-server=utf8mb4_unicode_ci
            - --default-authentication-plugin=mysql_native_password
          resources:
            limits:
              memory: "512Mi"
              cpu: "500m"
---
apiVersion: v1
kind: Service
metadata:
  name: mysql-service
spec:
  selector:
    app: mysql
  ports:
    - port: 3306
      targetPort: 3306
  type: ClusterIP
